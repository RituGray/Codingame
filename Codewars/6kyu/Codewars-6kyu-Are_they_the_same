/*
---ToDo---
Given two arrays a and b. Write a function comp(a, b) that checks whether the two arrays have the "same" elements, 
with the same multiplicities (the multiplicity of a member is the number of times it appears). 
"Same" means, here, that the elements in b are the elements in a squared, regardless of the order.
---Example---
a = [121, 144, 19, 161, 19, 144, 19, 11]  
b = [121, 14641, 20736, 361, 25921, 361, 20736, 361]
comp(a, b) returns true.
---Example---
a = [121, 144, 19, 161, 19, 144, 19, 11]  
b = [121, 14641, 20736, 36100, 25921, 361, 20736, 361]
comp(a, b) returns false.
---Note---
The two arrays have the same size (> 0) given as parameter in function comp.
*/

function comp(array1, array2){
    //your code here
  }

// Test
/*
describe("Tests", () => {
    it("test", () => {
        a1 = [121, 144, 19, 161, 19, 144, 19, 11];
        a2 = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19];
        Test.assertEquals(comp(a1, a2), true);
    });
});
*/

// Other Solutions
/*

*/